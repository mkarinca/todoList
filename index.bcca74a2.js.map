{"mappings":"UACWA,GAIVA,EAAOC,GAAK,SAAUC,EAAUC,UACvBA,GAASC,UAAUC,cAAcH,IAE1CF,EAAOM,IAAM,SAAUJ,EAAUC,UACxBA,GAASC,UAAUG,iBAAiBL,IAI7CF,EAAOQ,IAAM,SAAUC,EAAQC,EAAMC,EAAUC,GAC9CH,EAAOI,iBAAiBH,EAAMC,IAAYC,IAK3CZ,EAAOc,UAAY,SAAUL,EAAQP,EAAUQ,EAAMK,OAYhDH,EAAsB,SAATF,GAA4B,UAATA,EAEpCV,EAAOQ,IAAIC,EAAQC,GAbnB,SAAuBM,OAClBC,EAAgBD,EAAMP,OACtBS,EAAoBlB,EAAOM,IAAIJ,EAAUO,GAC9BU,MAAMC,UAAUC,QAAQC,KAAKJ,EAAmBD,IAAkB,GAGhFF,EAAQO,KAAKL,EAAeD,KAOUJ,IAKzCZ,EAAOuB,QAAU,SAAUC,EAASC,MAC9BD,EAAQE,kBAGTF,EAAQE,WAAWD,QAAQE,gBAAkBF,EAAQE,cACjDH,EAAQE,WAET1B,EAAOuB,QAAQC,EAAQE,WAAYD,IAK3CG,SAASR,UAAUS,QAAUV,MAAMC,UAAUS,SAC3C7B","sources":["./js/helpers.js"],"sourcesContent":["/*global NodeList */\n(function (window) {\n\t'use strict';\n\n\t// Get element(s) by CSS selector:\n\twindow.qs = function (selector, scope) {\n\t\treturn (scope || document).querySelector(selector);\n\t};\n\twindow.qsa = function (selector, scope) {\n\t\treturn (scope || document).querySelectorAll(selector);\n\t};\n\n\t// addEventListener wrapper:\n\twindow.$on = function (target, type, callback, useCapture) {\n\t\ttarget.addEventListener(type, callback, !!useCapture);\n\t};\n\n\t// Attach a handler to event for all elements that match the selector,\n\t// now or in the future, based on a root element\n\twindow.$delegate = function (target, selector, type, handler) {\n\t\tfunction dispatchEvent(event) {\n\t\t\tvar targetElement = event.target;\n\t\t\tvar potentialElements = window.qsa(selector, target);\n\t\t\tvar hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0;\n\n\t\t\tif (hasMatch) {\n\t\t\t\thandler.call(targetElement, event);\n\t\t\t}\n\t\t}\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/Events/blur\n\t\tvar useCapture = type === 'blur' || type === 'focus';\n\n\t\twindow.$on(target, type, dispatchEvent, useCapture);\n\t};\n\n\t// Find the element's parent with the given tag name:\n\t// $parent(qs('a'), 'div');\n\twindow.$parent = function (element, tagName) {\n\t\tif (!element.parentNode) {\n\t\t\treturn;\n\t\t}\n\t\tif (element.parentNode.tagName.toLowerCase() === tagName.toLowerCase()) {\n\t\t\treturn element.parentNode;\n\t\t}\n\t\treturn window.$parent(element.parentNode, tagName);\n\t};\n\n\t// Allow for looping on nodes by chaining:\n\t// qsa('.foo').forEach(function () {})\n\tNodeList.prototype.forEach = Array.prototype.forEach;\n})(window);\n"],"names":["window","qs","selector","scope","document","querySelector","qsa","querySelectorAll","$on","target","type","callback","useCapture","addEventListener","$delegate","handler","event","targetElement","potentialElements","Array","prototype","indexOf","call","$parent","element","tagName","parentNode","toLowerCase","NodeList","forEach"],"version":3,"file":"index.bcca74a2.js.map"}