{"mappings":"UACWA,OAGLC,EAAAA,CACFC,IAAK,QACLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UAGHC,EAAiB,SAAUC,UACtBR,EAAYQ,IAGjBC,EAAkB,YAClBC,EAAAA,IAAyBC,OAAOF,EAAgBG,QAapD,SAAAC,IACEC,KAAKC,gBACH,uNA0BJF,EAASG,UAAUC,KAAO,SAAUC,OAC9BC,EAAGC,EAxCcC,EAyCjBC,EAAO,OAENH,EAAI,EAAGC,EAAIF,EAAKK,OAAQJ,EAAIC,EAAGD,IAAAA,KAC9BK,EAAWV,KAAKC,gBAChBU,EAAY,GACZC,EAAU,GAEVR,EAAKC,GAAGM,YACVA,EAAY,YACZC,EAAU,WAQZJ,GAFAE,GADAA,GADAA,GADAA,EAAWA,EAASG,WAAW,SAAUT,EAAKC,GAAGS,KAC7BD,WAAW,aAtDZN,EAsDgCH,EAAKC,GAAGU,QArD5CnB,EAAmBoB,KAAKT,GACrCA,EAAOU,QAAQtB,EAAiBF,GAChCc,IAoDkBM,WAAW,gBAAiBF,IAC5BE,WAAW,cAAeD,UAKzCJ,GASTT,EAASG,UAAUgB,YAAc,SAAUC,SAGlC,WAAaA,EAAc,kBAFL,IAAhBA,EAAoB,GAAK,KAEwB,SAShEpB,EAASG,UAAUkB,qBAAuB,SAAUC,UAC9CA,EAAiB,EACZ,kBAEA,IAKXpC,EAAOqC,IAAMrC,EAAOqC,KAAAA,GACpBrC,EAAOqC,IAAIvB,SAAWA,GACrBd","sources":["./js/template.js"],"sourcesContent":["/*jshint laxbreak:true */\n(function (window) {\n  \"use strict\";\n\n  var htmlEscapes = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#x27;\",\n    \"`\": \"&#x60;\",\n  };\n\n  var escapeHtmlChar = function (chr) {\n    return htmlEscapes[chr];\n  };\n\n  var reUnescapedHtml = /[&<>\"'`]/g;\n  var reHasUnescapedHtml = new RegExp(reUnescapedHtml.source);\n\n  var escape = function (string) {\n    return string && reHasUnescapedHtml.test(string)\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  };\n\n  /**\n   * Sets up defaults for all the Template methods such as a default template\n   *\n   * @constructor\n   */\n  function Template() {\n    this.defaultTemplate =\n      '<li data-id=\"{{id}}\" class=\"{{completed}}\">' +\n      '<div class=\"view\">' +\n      '<input id=\"item{{id}}\" class=\"toggle\" type=\"checkbox\" {{checked}}>' +\n      '<label for=\"item{{id}}\">{{title}}</label>' +\n      '<button class=\"destroy\"></button>' +\n      \"</div>\" +\n      \"</li>\";\n  }\n\n  /**\n   * Creates an <li> HTML string and returns it for placement in your app.\n   *\n   * NOTE: In real life you should be using a templating engine such as Mustache\n   * or Handlebars, however, this is a vanilla JS example.\n   *\n   * @param {object} data The object containing keys you want to find in the\n   *                      template to replace.\n   * @returns {string} HTML String of an <li> element\n   *\n   * @example\n   * view.show({\n   *\tid: 1,\n   *\ttitle: \"Hello World\",\n   *\tcompleted: 0,\n   * });\n   */\n  Template.prototype.show = function (data) {\n    var i, l;\n    var view = \"\";\n\n    for (i = 0, l = data.length; i < l; i++) {\n      var template = this.defaultTemplate;\n      var completed = \"\";\n      var checked = \"\";\n\n      if (data[i].completed) {\n        completed = \"completed\";\n        checked = \"checked\";\n      }\n\n      template = template.replaceAll(\"{{id}}\", data[i].id);\n      template = template.replaceAll(\"{{title}}\", escape(data[i].title));\n      template = template.replaceAll(\"{{completed}}\", completed);\n      template = template.replaceAll(\"{{checked}}\", checked);\n\n      view = view + template;\n    }\n\n    return view;\n  };\n\n  /**\n   * Displays a counter of how many to dos are left to complete\n   *\n   * @param {number} activeTodos The number of active todos.\n   * @returns {string} String containing the count\n   */\n  Template.prototype.itemCounter = function (activeTodos) {\n    var plural = activeTodos === 1 ? \"\" : \"s\";\n\n    return \"<strong>\" + activeTodos + \"</strong> item\" + plural + \" left\";\n  };\n\n  /**\n   * Updates the text within the \"Clear completed\" button\n   *\n   * @param  {[type]} completedTodos The number of completed todos.\n   * @returns {string} String containing the count\n   */\n  Template.prototype.clearCompletedButton = function (completedTodos) {\n    if (completedTodos > 0) {\n      return \"Clear completed\";\n    } else {\n      return \"\";\n    }\n  };\n\n  // Export to window\n  window.app = window.app || {};\n  window.app.Template = Template;\n})(window);\n"],"names":["window","htmlEscapes","&","<",">","\"","'","`","escapeHtmlChar","chr","reUnescapedHtml","reHasUnescapedHtml","RegExp","source","Template","this","defaultTemplate","prototype","show","data","i","l","string","view","length","template","completed","checked","replaceAll","id","title","test","replace","itemCounter","activeTodos","clearCompletedButton","completedTodos","app"],"version":3,"file":"index.41f5727f.js.map"}